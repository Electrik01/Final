@model GameStore.Domain.Entities.Store.Game

@{
    ViewBag.Title = "Game";
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script>
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);
    var DateStr  = @Html.Raw(Json.Encode(@ViewBag.Date));
    var CountStr  = @Html.Raw(Json.Encode(@ViewBag.Count));
    let subarray = []; //массив в который будет выведен результат.
    console.log(DateStr);
    let mas = ["Дата", "Покупок"];
    subarray.push(mas);
    for (let i = 5; i>=0; i--) {
        let mas_f = [DateStr[i], CountStr[i]];
        subarray.push(mas_f);
    }


    console.log(subarray);
    function drawChart() {
        var data = google.visualization.arrayToDataTable(
            subarray
        );
        var options = {
            title: 'Количество продаж',
            vAxis: { minValue: 0 }
        };

        var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }


</script>
<style>
    body {
        background-color: #F3F0F0;
    }

    .game_block {
        background-color: white;
        overflow: hidden;
        height: 245px;
        border-radius: 5px;
    }

    .decription_g {
        border-radius: 5px;
        margin-top: 10px;
        padding: 10px;
        background-color: white;
    }
    .image_box {
        padding: 10px;
        width: 400px;
        height: 200px;
    }

    .container-fluid {
        width: 90%;
        padding-top: 50px;
    }

    .game_block img {
        border-radius: 2px;
        width: 400px;
    }

    .genres, .developer, .features, .game_block {
        display: flex;
        flex-direction: row;
    }

        .genres p, .developer p, .features p {
            margin-right: 10px;
            margin-top: -1px;
        }

        .genres h6, .features h6, .developer h6 {
            margin-right: 10px;
        }

    .game_info {
        margin: 30px;
        margin-left: 50px;
        display: flex;
        flex-direction: column;
    }

    .price {
        margin-left: 70%;
        display: flex;
        flex-direction: row;
    }

        .price p {
            color: black;
            margin-left: 2px;
            margin-top: 4px;
        }

    #chart_div {
        border-radius:5px;
        width: 100%;
        height: 245px;
    }
    .btn_next {
        width:49%;
        height: 50px;
        margin: auto;
        background-color: #333;
        margin-top: 30px;
        color: white;
        font-size: 160%;
        font-weight: 700;
        border: 0;
        border-radius: 5px;
    }
    .btn-danger {
        width: 49%;
        height: 50px;
        margin: auto;
        margin-top: 30px;
        color: white;
        font-size: 160%;
        font-weight: 700;
        border: 0;
        border-radius: 5px;
    }
    .gr_btn{
        margin-top:10px;
        bottom:0;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <div class="game_block">
                <div class="image_box">
                    @Html.Raw("<img src=\"data:image/jpeg;base64," + Convert.ToBase64String(Model.Pictures.FirstOrDefault().Image) + "\" />")
                </div>
                <div class="game_info">
                    <h3><u>@Model.Name</u></h3>
                    <div class="genres">

                        <h6>Жанры: </h6>
                        @foreach (var item in Model.Genres)
                        {
                            <p><u>@item.Name</u></p>
                        }
                    </div>
                    <div class="features">
                        <h6>Особености: </h6>

                        @foreach (var item in Model.Features)
                        {
                            <p><u>@item.Name</u></p>
                        }
                    </div>
                    <div class="developer">
                        <h6>Разработчик: </h6><p>@Model.Developer.Name</p>
                    </div>
                    <div class="price">
                        <h4>@Model.Price</h4>
                        <p>грн</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6">

                <div id="chart_div"></div>
    
        </div>
    </div>
    <div class="row">
        <div class="col-6 ">
            <div class="decription_g">

                @Html.Raw(@Model.Description)
            </div>

        </div>
        <div class="col-6">
            <div class="gr_btn">


                @Html.ActionLink("Удалить", "Delete", "Admin", new { name = Model.Name }, new { @class = "btn btn-danger" })
                @Html.ActionLink("Редкатировать", "Update", "Admin", new { name = Model.Name }, new { @class = "btn btn_next" })
            </div>

        </div>
    </div>
</div>

